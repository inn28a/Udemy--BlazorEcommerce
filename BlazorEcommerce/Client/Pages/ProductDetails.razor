@page "/product/{id:int}"
@inject IProductService ProductService

@if (product == null)
{
    <span>Loading Product ...</span>
}
else
{
    <div class="media">
        <div class="media-img-wrapper mr-2">
            <img class="media-img" src="@product.ImageUrl" alt="@product.Title" />
        </div>
        <div class="media-body">
            <h2 class="mb-0">@product.Title</h2>
            <p>@product.Description</p>
            @if(GetSelectedVariant() != null)
            {
                @if(GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                {
                    <h6 class="text-muted original-price">$@GetSelectedVariant().OriginalPrice</h6>
                }
                <h4 class="price">$@GetSelectedVariant().Price</h4>
            }           
        </div>
    </div>
}

@code {
    public Product? product = null;
    private int currentTypeId = 1;


    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        product = ProductService.Products.Find(p => p.Id == Id);
        if(product.Variants.Count > 0)
        {
            currentTypeId = product.Variants[0].ProductTypeId;
        }
    }

    private ProductVariant GetSelectedVariant()
    {
        var variant = product.Variants.FirstOrDefault(v => v.ProductTypeId == currentTypeId);
        return variant;
    }
}
